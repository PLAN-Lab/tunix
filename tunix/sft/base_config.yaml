# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################## LOAD MODEL ##################################
# Specify model name in style of {model_version}-{model size}, this will use to invoke model config
model_name: "llama3.1-8b"

# Chagne model source to your downloading model workflow. Example: "kaggle" | "huggingface" | "gcs" | ""
model_source: "huggingface"

# Replace it with your own model checkpoint directory.
model_id: "meta-llama/Llama-3.1-8B"

# Usually, `tokenizer_path` should be same as `model_id`, unless you load tokenizer from elsewhere.
tokenizer_path: "meta-llama/Llama-3.1-8B"

################################## KAGGLE ##################################
# If download checkpoint from kaggle, specify your kaggle credentials in envrionment variable starts with prefix `T_`
kaggle_username: None
kaggle_key: None

################################## HF ##################################
# If download checkpoint from hugging face, specifcy your hf credentials in environnebt variable starts with prefix `T_`
hf_token: None
# for model downloaded from huggingface, copy model to local directory.
hf_cp_base_model_directory: "/tmp/models"

################################## MODEL MESH ##################################
mesh:
  shape: "(2,2)"
  # "('fsdp',)"
  axis_names: "('fsdp','tp')"

################################## DATASET ##################################
# Currenly, only translation dataset pipeline supported. Try "Helsinki-NLP/opus-100" or "mtnt/en-fr"
dataset_name: "Helsinki-NLP/opus-100"
batch_size: 16
max_target_length: 256
num_train_epochs: 1

################################## NNX ##################################
# Integer seed to create `nnx.Rngs` to mangage the random state.
rng_seed: 0

# Display model
visualize_model: false

# Directory used for NNX conversion if downloaded Gemma from third party source
intermediate_ckpt_dir: "/tmp/intermediate_ckpt/"
################################# LoRa Config #################################
lora_config:
  rank: 16
  alpha: 2.0
  weight_qtype: "nf4"
  tile_size: 256


############################### Optimizer ###############################
# Peft Trainer optimizer config.
# Only scalar learning rate is supported for now.
optimizer_config:
  learning_rate: 1e-5
  opt_type: "adamw"

############################### Training Config ###############################
training_config:
  eval_every_n_steps: 2
  max_steps: 10
  gradient_accumulation_steps: 1
  checkpoint_root_directory: "/tmp/ckpts"
  checkpointing_options:
    max_to_keep: 1
    save_interval_steps: 180
  metrics_logging_options:
    log_dir: "/tmp/logging"
    flush_every_n_steps: 20
  profiler_options:
    log_dir: "/tmp/profiling"
    skip_first_n_steps: 1
    profiler_steps: 9
  data_sharding_axis: ["fsdp"]
  max_inflight_computations: 2
